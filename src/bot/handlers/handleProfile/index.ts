import path from "path";
import { MyContext } from "@bot/features/scenes";
import { UserController } from "@controller";
import userActionsLogger from "@infrastructure/logger/userActionsLogger";
import { profileKeyboard } from "./keyboard";
import { formatDateToDDMMYYYY, getRandomImage } from "@utils/index";

export const handleProfile = async (ctx: MyContext) => {
  const accountId = ctx.user!.accountId;
  const username = ctx.user!.username;

  try {
    const user = await UserController.findByAccountId(accountId);
    const imagePath = await getRandomImage(
      path.resolve(__dirname, `../../assets/images/PROFILE`),
      path.resolve(__dirname, `../../assets/images/PROFILE/1.jpg`)
    );

    await ctx.replyWithPhoto(
      { source: imagePath },
      {
        caption: [
          `${user!.nickname}\n`,
          `–¢–≤–æ–π —É—Ä–æ–≤–µ–Ω—å: ${user!.level}`,
          `–§–µ–π–º –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è: ${user!.fame}`,
          `–§–µ–π–º –∑–∞ —Å–µ–∑–æ–Ω: ${user!.seasonalFame}\n`,
          `‚òÅÔ∏è –¢—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è ${formatDateToDDMMYYYY(user!.registeredAt)}`,
          `‚òÅÔ∏è –°—Ç–∞—Ç—É—Å –ø–∞—Å—Å–∞: ${user!.hasPass ? "–∞–∫—Ç–∏–≤–µ–Ω" : "–Ω–µ –∞–∫—Ç–∏–≤–µ–Ω"}`,
        ].join("\n"),
        ...profileKeyboard,
      }
    );
  } catch (error) {
    await ctx.reply("üö´ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
    userActionsLogger(
      "error",
      "handleProfile",
      `–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –≤ –ø—Ä–æ—Ñ–∏–ª—å: ${(error as Error).message}`,
      { accountId, username }
    );
  }
};
