import { MyContext } from "@bot/features/scenes";
import userActionsLogger from "@infrastructure/logger/userActionsLogger";
import { UserDto } from "@domain/dtos";
import { profileKeyboard } from "./keyboard";
import { formatDateToDDMMYYYY } from "@utils/index";

export const handleProfile = async (ctx: MyContext) => {
  const accountId = ctx.from?.id ? BigInt(ctx.from.id) : null;
  const username = ctx.from?.username ?? null;

  const meta = { accountId, username };

  try {
    const user = ctx.user as UserDto;

    await ctx.reply(
      [
        `${user!.nickname ?? "–∏–≥—Ä–æ–∫"}\n`,
        `–¢–≤–æ–π —É—Ä–æ–≤–µ–Ω—å: ${user!.level}`,
        `–§–µ–π–º –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è: ${user!.fame}`,
        `–§–µ–π–º –∑–∞ —Å–µ–∑–æ–Ω: ${user!.seasonalFame}\n`,
        `‚òÅÔ∏è –¢—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è ${formatDateToDDMMYYYY(user!.registeredAt)}`,
        `‚òÅÔ∏è –°—Ç–∞—Ç—É—Å –ø–∞—Å—Å–∞: ${user!.hasPass ? "–∞–∫—Ç–∏–≤–µ–Ω" : "–Ω–µ –∞–∫—Ç–∏–≤–µ–Ω"}`,
      ].join("\n"),
      profileKeyboard
    );

    userActionsLogger(
      "info",
      "handleProfile",
      "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ—à–µ–ª –≤ –ø—Ä–æ—Ñ–∏–ª—å",
      meta
    );
  } catch (error) {
    await ctx.reply("üö´ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");

    userActionsLogger(
      "error",
      "handleProfile",
      `–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –≤ –ø—Ä–æ—Ñ–∏–ª—å: ${(error as Error).message}`,
      meta
    );
  }
};
