import { Markup } from "telegraf";
import userActionsLogger from "@infrastructure/logger/userActionsLogger";
import { MyContext } from "@bot/scenes";
import { BUTTONS } from "@bot/markup/buttons";
import { formatDateToDDMMYYYY } from "@utils/index";

export const handleProfile = async (ctx: MyContext) => {
  const accountId = ctx.from?.id ? BigInt(ctx.from.id) : null;
  const username = ctx.from?.username ?? null;

  const meta = { accountId, username };

  try {
    const user = ctx.user;

    await ctx.reply(
      [
        `${user.nickname ?? "–∏–≥—Ä–æ–∫"}\n`,
        `‚òÅÔ∏è –¢—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è ${formatDateToDDMMYYYY(user.registeredAt)}`,
        `‚òÅÔ∏è –°—Ç–∞—Ç—É—Å –ø–∞—Å—Å–∞: ${user.hasPass ? "–∞–∫—Ç–∏–≤–µ–Ω" : "–Ω–µ –∞–∫—Ç–∏–≤–µ–Ω"}`,
      ].join("\n"),
      Markup.inlineKeyboard([
        Markup.button.callback(BUTTONS.CLOSE, "DELETE_MESSAGE"),
      ])
    );

    userActionsLogger(
      "info",
      "handleProfile",
      "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ—à–µ–ª –≤ –ø—Ä–æ—Ñ–∏–ª—å",
      meta
    );
  } catch (error) {
    await ctx.reply("üö´ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");

    userActionsLogger(
      "error",
      "handleProfile",
      `–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –≤ –ø—Ä–æ—Ñ–∏–ª—å: ${(error as Error).message}`,
      meta
    );
  }
};
