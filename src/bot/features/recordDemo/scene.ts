import { Scenes } from "telegraf";
import { Message } from "telegraf/typings/core/types/typegram";
import { message } from "telegraf/filters";
import { MyContext, SessionData } from "../scenes";
import DemoController from "@controller/DemoController";

const recordDemoScene = new Scenes.BaseScene<MyContext>("recordDemo");

recordDemoScene.enter(async (ctx: MyContext) => {
  const session = ctx.session as SessionData;

  try {
    const { canRecord, remainingTimeText } = await DemoController.canRecord(
      ctx.user!.accountId
    );
    if (!canRecord) {
      await ctx.reply(
        `‚òÅÔ∏è –¢—ã —É–∂–µ –Ω–∞–¥—Ä–∏—Å—Ç–∞–ª —Å—Ç–∏–ª—è, –±—Ä–∞—á–æ, –ø—Ä–∏—Ö–æ–¥–∏ —á–µ—Ä–µ–∑ ${remainingTimeText!}`
      );
      return ctx.scene.leave();
    }

    session.demo = {};
    await ctx.reply("üìÄ –§–∞–∞, —Å–¥–µ–ª–∞–ª –¥–µ–ª–æ ‚Äî —Ä—ç–ø—É–π —Å–º–µ–ª–æ. –ù—É–∫–∞ –Ω–∞–∫–∏–¥–∞–π –±–∞—Ä–æ–≤");
  } catch (error) {
    await ctx.reply("üö´ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ");
    return ctx.scene.leave();
  }
});

recordDemoScene.on(message("text"), async (ctx: MyContext) => {
  const session = ctx.session as SessionData;
  const msg = ctx.message as Message.TextMessage;

  if (!session.demo!.text) {
    session.demo!.text = msg.text.trim();
    return await ctx.reply("üí™üèø –ë–∞–∑–∞—Ä—É –Ω–µ—Ç, —Ç—ã –Ω–µ–º–æ—â—å. –ü—Ä–∏–¥—É–º–∞–π –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–µ–º–∫–∏");
  }

  if (!session.demo!.name) {
    session.demo!.name = msg.text.trim();

    const name = session.demo!.name;
    const text = session.demo!.text;
    const accountId = BigInt(ctx.from!.id);

    try {
      await DemoController.create(accountId, name, text);

      await ctx.reply("üßñüèø –î–µ–º–æ—á–∫–∞ –∑–∞–ø–∏—Å–∞–Ω–∞, –º–æ–∂–µ—à—å —Å–∫–∏–¥—ã–≤–∞—Ç—å –µ–π");
    } catch (err) {
      await ctx.reply("üö´ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–µ–º–∫–∏.");
    }

    delete session.demo;
    return ctx.scene.leave();
  }
});

export default recordDemoScene;
