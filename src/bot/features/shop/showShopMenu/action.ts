import { Telegraf } from "telegraf";
import { MyContext } from "../../scenes";
import { shopButtons } from "./keyboard";
import { MENU_BUTTONS } from "@bot/handlers";
import { handleError, requireUser } from "@utils/index";
import { SECTION_EMOJI } from "@utils/constants";

export const showShopMenuAction = (bot: Telegraf<MyContext>) => {
  bot.action(MENU_BUTTONS.SHOP.callback, async (ctx) => {
    try {
      await ctx.answerCbQuery();

      const user = await requireUser(ctx);
      if (!user) return;

      await ctx.reply(
        `${SECTION_EMOJI} –£—Ö–æ–¥–∏ –≤ —Ä—ç–ø, —É—Ö–æ–¥–∏ –≤ –º—É–∑—ã–∫—É, —Ç–µ–±–µ –º—É–∑—ã–∫—É –Ω–∞–¥–æ –ø–∏—Å–∞—Ç—å. –ò—â–∏, –ø–æ–∫—É–ø–∞–π –∑–≤—É–∫–æ–≤—É—é –∫–∞—Ä—Ç—É, –º–∏–∫—Ä–æ—Ñ–æ–Ω, –Ω–∞—É—à–Ω–∏–∫–∏, –¥–∞–≤–∞–π –±—ã—Å—Ç—Ä–µ–µ. –î–∞–≤–∞–π –±–∏—Ç—ã –ø–∏—à–∏, –¥–∞–≤–∞–π –ø–æ—Ä–∞ –¥—Ä–æ–ø–∞—Ç—å—Å—è –Ω–∞ –ø–ª–æ—â–∞–¥–∫–∏\n\nü™ô –ë–∞–ª–∞–Ω—Å: ${user.racks}`,
        { reply_markup: shopButtons.reply_markup }
      );
    } catch (error) {
      await handleError(ctx, error, "showShopAction");
    }
  });
};
