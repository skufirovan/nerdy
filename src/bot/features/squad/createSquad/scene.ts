import { Scenes } from "telegraf";
import { message } from "telegraf/filters";
import { MyContext, SessionData } from "@bot/features/scenes";
import { SquadController } from "@controller";
import { ValidationError, validate, handleError } from "@utils/index";
import { SECTION_EMOJI } from "@utils/constants";

export const createSquadScene = new Scenes.BaseScene<MyContext>("createSquad");

createSquadScene.enter(async (ctx: MyContext) => {
  await ctx.reply("üë®üèø‚Äçüè´ –í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è");
});

createSquadScene.on(message("text"), async (ctx: MyContext) => {
  if (!ctx.message || !("text" in ctx.message))
    return await ctx.reply("‚ö†Ô∏è –û—Ç–ø—Ä–∞–≤—å —Ç–µ–∫—Å—Ç –¢–ï–ö–°–¢ #–¢–ï–ö–°–¢");

  const accountId = ctx.user!.accountId;
  const name = ctx.message.text.trim();
  const validation = validate(name);

  if (!validation.isValid) {
    const errorMessages: Record<ValidationError, string> = {
      TOO_SHORT: "–í –Ω–∞–∑–≤–∞–Ω–∏–∏ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–∏–Ω–∏–º—É–º 3 —Å–∏–º–≤–æ–ª–∞",
      TOO_LONG: "–í –Ω–∞–∑–≤–∞–Ω–∏–∏ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–∞–∫—Å–∏–º—É–º 40 —Å–∏–º–≤–æ–ª–æ–≤",
      INVALID_CHARS: "–ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã –∏ _-.,!?",
    };

    return await ctx.reply(
      `‚ö†Ô∏è ${errorMessages[validation.error!]}\n‚ûñ –î–∞–≤–∞–π –∑–∞–Ω–æ–≤–æ`
    );
  }

  try {
    const existed = await SquadController.findSquadByName(accountId, name);

    if (existed) {
      return await ctx.reply(
        `‚ùå –û–ø–ø—ã –±—ã–ª–∏ –±—ã—Å—Ç—Ä–µ–µ –∏ –∑–∞–Ω—è–ª–∏ —ç—Ç–æ –Ω–∞–∑–≤–∞–Ω–∏–µ, –ø–æ–ø—Ä–æ–±—É–π –¥—Ä—É–≥–æ–π –≤–∞—Ä–∏–∞–Ω—Ç`
      );
    }

    await SquadController.createSquad(accountId, name);

    await ctx.reply(
      `${SECTION_EMOJI} –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ, —Ç–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –Ω–∞–µ–±—ã–≤–∞—Ç—å –Ω–∞ —Ä–æ—è–ª—Ç–∏`
    );
    return ctx.scene.leave();
  } catch (error) {
    await handleError(ctx, error, "createSquadScene.on");
    return ctx.scene.leave();
  }
});
